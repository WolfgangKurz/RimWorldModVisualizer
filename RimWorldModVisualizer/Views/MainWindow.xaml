<Window x:Class="RimWorldModVisualizer.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
		xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
		xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
		xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
		xmlns:local="clr-namespace:RimWorldModVisualizer"
		xmlns:v="clr-namespace:RimWorldModVisualizer.Views"
		xmlns:vm="clr-namespace:RimWorldModVisualizer.ViewModels"
		xmlns:b="clr-namespace:RimWorldModVisualizer.Behaviors"
		xmlns:cv="clr-namespace:RimWorldModVisualizer.Converters"
		mc:Ignorable="d"
		d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
		Background="#37373f"
		Title="RimWorldModVisualizer"
		Width="1200"
		Height="720"
		x:Name="RootElement">
	<i:Interaction.Triggers>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.WindowAction">
			<livet:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition.Child">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="True" />
		</livet:InteractionMessageTrigger>

		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Window.Resources>
		<AlternationConverter x:Key="TreeViewBackgroundConverter">
			<SolidColorBrush Color="Transparent" />
			<SolidColorBrush Color="#37373f" />
		</AlternationConverter>

		<cv:NullImageConverter x:Key="NullImageConverter" />
		<cv:ColorToSolidBrushConverter x:Key="ColorToSolidBrushConverter" />

		<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Grid Width="16"
							  Background="Transparent">
							<Path x:Name="ExpandPath"
								  HorizontalAlignment="Left" 
								  VerticalAlignment="Center" 
								  Margin="2,1,1,1"
								  Fill="White"
								  Data="M 4 0 L 8 4 L 4 8 Z"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
								<Setter Property="Margin" TargetName="ExpandPath" Value="4,1,1,1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<HierarchicalDataTemplate x:Key="ModTemplate"
								  DataType="{x:Type vm:ModViewModel}"
								  ItemsSource="{Binding Childs, Mode=OneWay}"
								  AlternationCount="2">
			<Grid Margin="0,2,5,2">
				<Grid.Resources>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Foreground" Value="White" />
					</Style>
				</Grid.Resources>
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsMatch, Mode=OneWay}" Value="False">
								<Setter Property="Opacity" Value="0.33" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<CheckBox Grid.Column="0"
						  Grid.Row="0"
						  Margin="0,1,5,0"
						  Focusable="False">
					<CheckBox.Style>
						<Style TargetType="{x:Type CheckBox}">
							<Setter Property="IsChecked" Value="{Binding Enabled, Mode=TwoWay}" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="Directory">
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Id, Mode=OneWay}" Value="Core">
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</CheckBox.Style>
				</CheckBox>

				<emoji:TextBlock Grid.Column="1"
								 Grid.Row="0"
								 Text="{Binding Name, Mode=OneWay}">
					<emoji:TextBlock.Style>
						<Style TargetType="{x:Type emoji:TextBlock}">
							<Setter Property="Foreground" Value="White" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding HasColor, Mode=OneWay}" Value="True">
									<Setter Property="Foreground" Value="{Binding HexColor, Mode=OneWay}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</emoji:TextBlock.Style>
				</emoji:TextBlock>
				<TextBlock Grid.Column="2"
						   Grid.Row="0"
						   Margin="4,0,4,0"
						   FontSize="10"
						   Foreground="#a0ffffff">
					<TextBlock.Style>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="Text" Value="{Binding Childs.Count, Mode=OneWay, StringFormat={}({0})}" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Childs.Count, Mode=OneWay}" Value="0">
									<Setter Property="Text" Value="" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="Directory">
									<Setter Property="Text" Value="{Binding Childs.Count, Mode=OneWay, StringFormat={}({0})}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Viewbox Grid.Column="3"
						 Grid.Row="0"
						 Margin="0,0,5,0"
						 Width="14">
					<Viewbox.Resources>
						<Style TargetType="{x:Type Path}">
							<Setter Property="Fill" Value="White" />
						</Style>
					</Viewbox.Resources>
					<Grid>
						<Path Fill="White"
							  Data="M395.5 177.5c0 33.8-27.5 61-61 61-33.8 0-61-27.3-61-61s27.3-61 61-61c33.5 0 61 27.2 61 61zm52.5.2c0 63-51 113.8-113.7 113.8L225 371.3c-4 43-40.5 76.8-84.5 76.8-40.5 0-74.7-28.8-83-67L0 358V250.7L97.2 290c15.1-9.2 32.2-13.3 52-11.5l71-101.7c.5-62.3 51.5-112.8 114-112.8C397 64 448 115 448 177.7zM203 363c0-34.7-27.8-62.5-62.5-62.5-4.5 0-9 .5-13.5 1.5l26 10.5c25.5 10.2 38 39 27.7 64.5-10.2 25.5-39.2 38-64.7 27.5-10.2-4-20.5-8.3-30.7-12.2 10.5 19.7 31.2 33.2 55.2 33.2 34.7 0 62.5-27.8 62.5-62.5zm207.5-185.3c0-42-34.3-76.2-76.2-76.2-42.3 0-76.5 34.2-76.5 76.2 0 42.2 34.3 76.2 76.5 76.2 41.9.1 76.2-33.9 76.2-76.2z">
							<Path.Style>
								<Style TargetType="{x:Type Path}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="Steam">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
						<Path Fill="White"
							  Data="M576 304v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48zm-48-80a79.557 79.557 0 0 1 30.777 6.165L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L17.223 230.165A79.557 79.557 0 0 1 48 224h480zm-48 96c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm-96 0c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z">
							<Path.Style>
								<Style TargetType="{x:Type Path}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="Local">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
						<Path Fill="White">
							<Path.Style>
								<Style TargetType="{x:Type Path}">
									<Setter Property="Data" Value="M527.9 224H480v-48c0-26.5-21.5-48-48-48H272l-64-64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h400c16.5 0 31.9-8.5 40.7-22.6l79.9-128c20-31.9-3-73.4-40.7-73.4zM48 118c0-3.3 2.7-6 6-6h134.1l64 64H426c3.3 0 6 2.7 6 6v42H152c-16.8 0-32.4 8.8-41.1 23.2L48 351.4zm400 282H72l77.2-128H528z" />
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="Directory">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Expanded, Mode=OneWay}" Value="False">
											<Setter Property="Data" Value="M464 128H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm0 272H48V112h140.12l54.63 54.63c6 6 14.14 9.37 22.63 9.37H464v224z" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
					</Grid>
				</Viewbox>

				<Grid Grid.Column="0"
					  Grid.Row="1"
					  Grid.ColumnSpan="3">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.Style>
						<Style TargetType="{x:Type Grid}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="Directory">
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
					<Grid.Resources>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="FontSize" Value="10" />
							<Setter Property="Foreground" Value="#a4a4a4" />
						</Style>
					</Grid.Resources>

					<TextBlock Grid.Column="0"
							   Text="{Binding Author, Mode=OneWay}" />
					<TextBlock Grid.Column="1"
							   Text="{Binding Version, Mode=OneWay}" />
				</Grid>
			</Grid>
		</HierarchicalDataTemplate>
	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Menu Grid.Column="0"
			  Grid.Row="0"
			  Grid.ColumnSpan="2">

			<MenuItem Header="Mod">
				<MenuItem Header="_Load RimWorld Mod list"
						  Command="{Binding MenuLoadRWModsCommand, Mode=OneWay}" />
				<MenuItem Header="_Open from..."
						  Command="{Binding MenuOpenCommand, Mode=OneWay}" />
				<MenuItem Header="_Save to RimWorld"
						  Command="{Binding MenuSaveCommand, Mode=OneWay}" />
				<MenuItem Header="Save _As..."
						  Command="{Binding MenuSaveAsCommand, Mode=OneWay}" />
				<Separator />
				<MenuItem Header="RWMSDB">
					<MenuItem Header="Sort (Remove empty directories)"
						  Command="{Binding MenuSortCommand, Mode=OneWay}" />
					<MenuItem Header="Sort (With empty directories)"
						  Command="{Binding MenuSortNoRemoveCommand, Mode=OneWay}" />
				</MenuItem>
				<MenuItem Header="Color">
					<MenuItem Header="Recolor mods with directory color"
							  Command="{Binding MenuRecolorWithDir, Mode=OneWay}" />
					<MenuItem Header="Reset colors (Includes directory)"
							  Command="{Binding MenuColorResetAll, Mode=OneWay}" />
					<MenuItem Header="Reset colors (Excludes directory)"
							  Command="{Binding MenuColorResetMods, Mode=OneWay}" />
				</MenuItem>
			</MenuItem>
			<MenuItem Header="Version">
				<MenuItem Header="{Binding Version, Mode=OneWay}"
						  HeaderStringFormat="RWMV {0}"
						  IsEnabled="False" />
				<MenuItem Header="{Binding RWMSDBVersion, Mode=OneWay}"
						  HeaderStringFormat="RWMSDB {0}"
						  IsEnabled="False" />
			</MenuItem>
		</Menu>

		<Grid Grid.Column="0"
			  Grid.Row="1"
			  Margin="5,5,0,5">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<TextBox Grid.Row="0"
					 Margin="0,0,0,5"
					 Padding="5"
					 BorderThickness="0"
					 Background="#27272f"
					 Foreground="White"
					 FontSize="12"
					 Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

			<TreeView Grid.Row="1"
					  Margin="0,0,0,5"
					  ItemsSource="{Binding ModList, Mode=OneWay}"
					  ItemTemplate="{DynamicResource ModTemplate}"
					  BorderThickness="0"
					  Background="#27272f"
					  AlternationCount="2"
					  dd:DragDrop.IsDragSource="True"
					  dd:DragDrop.IsDropTarget="True"
					  dd:DragDrop.UseDefaultDragAdorner="True"
					  dd:DragDrop.UseDefaultEffectDataTemplate="False"
					  dd:DragDrop.SelectDroppedItems="True"
					  SnapsToDevicePixels="True"
					  MinWidth="140">
				<i:Interaction.Behaviors>
					<b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedMod, Mode=TwoWay}" />
				</i:Interaction.Behaviors>
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}">
						<Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TreeViewItem}">
									<Grid x:Name="ItemRow">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition />
											<RowDefinition />
										</Grid.RowDefinitions>

										<ToggleButton x:Name="Expander"
													  Style="{StaticResource ExpandCollapseToggleStyle}"
													  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
													  ClickMode="Press" />

										<Grid Grid.Column="1"
											  x:Name="Item">
											<ContentPresenter x:Name="PART_Header"
															  Margin="5,0,0,0"
															  ContentSource="Header"
															  VerticalAlignment="Stretch"
															  HorizontalAlignment="Stretch" />
										</Grid>

										<Grid Grid.Column="0"
											  Grid.Row="1"
											  Grid.ColumnSpan="2"
											  Margin="8,0,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<Border Width="1"
													Background="#50FFFFFF"
													BorderThickness="0" />
											<ItemsPresenter x:Name="ItemsHost"
															Margin="2,0,0,0"
															Grid.Column="1" />
										</Grid>
									</Grid>

									<ControlTemplate.Triggers>
										<Trigger Property="IsExpanded" Value="False">
											<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
										</Trigger>
										<Trigger Property="HasItems" Value="False">
											<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
										</Trigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
										</Trigger>
										<Trigger Property="IsSelected" Value="True">
											<Setter Property="Background" Value="#47474f" TargetName="Item" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>

						<Style.Triggers>
							<Trigger Property="ItemsControl.AlternationIndex" Value="1">
								<Setter Property="Background" Value="LightGray"></Setter>
							</Trigger>
							<Trigger Property="ItemsControl.AlternationIndex" Value="2">
								<Setter Property="Background" Value="White"></Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</TreeView.ItemContainerStyle>
			</TreeView>

			<Grid Grid.Row="2"
				  SnapsToDevicePixels="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<TextBox BorderThickness="0"
						 Grid.Column="0"
						 Margin="0,0,5,0"
						 Padding="2"
						 Background="#27272f"
						 Foreground="White"
						 FontSize="12"
						 Text="{Binding DirectoryName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

				<Border Margin="0,0,5,0"
						Padding="3"
						Grid.Column="1"
						Width="20"
						Height="20"
						Background="#27272f">
					<Border.InputBindings>
						<MouseBinding MouseAction="LeftClick" Command="{Binding AddDirectoryCommand}" />
					</Border.InputBindings>

					<Path Fill="White"
						  Stretch="Uniform"
						  Data="M12 9H7v5H5V9H0V7h5V2h2v5h5v2z" />
				</Border>
				<Border Padding="3"
						Grid.Column="2"
						Width="20"
						Height="20"
						Background="#27272f">
					<Border.InputBindings>
						<MouseBinding MouseAction="LeftClick" Command="{Binding RemoveDirectoryCommand}" />
					</Border.InputBindings>

					<Path Fill="White"
						  Stretch="Uniform"
						  Data="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z" />
				</Border>
			</Grid>
		</Grid>

		<Grid Grid.Column="1"
			  Grid.Row="1"
			  Margin="5"
			  DataContext="{Binding SelectedMod, Mode=OneWay}">
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid Grid.Row="0"
				  Background="#27272f">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<ItemsControl Grid.Column="0"
							  Margin="5"
							  ItemsSource="{Binding ElementName=RootElement, Path=DataContext.ColorGrid}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<Border Width="10"
												Height="10"
												Background="{Binding Mode=OneWay, Converter={StaticResource ColorToSolidBrushConverter}}">
											<Border.InputBindings>
												<MouseBinding MouseAction="LeftClick"
															  Command="{Binding ElementName=RootElement, Path=DataContext.SetModColorCommand}"
															  CommandParameter="{Binding}" />
											</Border.InputBindings>
										</Border>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

				<Image Grid.Column="1"
					   Margin="0,5,5,5"
					   HorizontalAlignment="Center"
					   MinHeight="40"
					   MaxHeight="320"
					   SnapsToDevicePixels="True"
					   RenderOptions.BitmapScalingMode="HighQuality"
					   Stretch="Uniform"
					   StretchDirection="DownOnly"
					   Source="{Binding Preview, Mode=OneWay, Converter={StaticResource NullImageConverter}}" />
			</Grid>

			<Grid Grid.Row="1"
				  Margin="0,5,0,0"
				  Background="#27272f">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Grid.Resources>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="FontSize" Value="12" />
						<Setter Property="Foreground" Value="White" />
					</Style>
				</Grid.Resources>

				<TextBlock Grid.Column="0"
						   Grid.Row="0"
						   Margin="5,5,0,0"
						   Foreground="#a4a4a4"
						   Text="제목" />
				<TextBlock Grid.Column="1"
						   Grid.Row="0"
						   Margin="5,5,0,0"
						   Text="{Binding Name, Mode=OneWay}" />
				<TextBlock Grid.Column="2"
						   Grid.Row="0"
						   Margin="5,5,0,0"
						   Foreground="#a4a4a4"
						   Text="게임 버전" />
				<TextBlock Grid.Column="3"
						   Grid.Row="0"
						   Margin="5,5,5,0"
						   Text="{Binding SupportedVersionsText, Mode=OneWay}" />

				<TextBlock Grid.Column="0"
						   Grid.Row="1"
						   Margin="5,5,0,5"
						   Foreground="#a4a4a4"
						   Text="저작자" />
				<TextBlock Grid.Column="1"
						   Grid.Row="1"
						   Margin="5,5,0,5"
						   Text="{Binding Author, Mode=OneWay}" />
				<TextBlock Grid.Column="2"
						   Grid.Row="1"
						   Margin="5,5,0,5"
						   Foreground="#a4a4a4"
						   Text="모드 버전" />
				<TextBlock Grid.Column="3"
						   Grid.Row="1"
						   Margin="5,5,5,5"
						   Text="{Binding Version, Mode=OneWay}" />
			</Grid>

			<ScrollViewer Grid.Row="2"
						  Margin="0,5,0,0">
				<RichTextBox Background="#27272f"
							 Padding="5,10"
							 BorderThickness="0"
							 Foreground="White"
							 IsReadOnly="True"
							 b:HtmlRichTextBoxBehavior.Text="{Binding Description, Mode=OneWay}" />
			</ScrollViewer>
		</Grid>
	</Grid>
</Window>
